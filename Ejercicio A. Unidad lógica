//Pines de entrada
int A_0= 5;
int A_1= 6;
int A_2= 7;
int A_3= 8;

int B_0= 14;
int B_1= 15;
int B_2= 16;
int B_3= 17;

int S0 = 2;
int S1= 3;
int S2= 4;
//Pines salida (LEDs)
int LF0= 9;
int LF1= 10;
int LF2= 11;
int LF3= 12;

void setup(){
  int i;
  for(i=2;i<=8;i++){
    pinMode(i,0);
  }
  for(i=14;i<=17;i++){
    pinMode(i,0);
  }
  for(i=9;i<=12;i++){
    pinMode(i,1);
  }
}

void loop(){
  int i;
  int Astronauta, Burro; //Variables A y B
  int As[4], Bs[4];
  int S, F[4]; //S es la entrada (convertida en función de los valores de los 3 selectores) y F la salida
  /////////////
  Astronauta=8*digitalRead(A_3)+4*digitalRead(A_2)+2*digitalRead(A_1)+digitalRead(A_0); //La salida será de 4 bits
  Burro=8*digitalRead(B_3)+4*digitalRead(B_2)+2*digitalRead(B_1)+digitalRead(B_0);
  /////////////
  S=digitalRead(S0)+2*digitalRead(S1)+4*digitalRead(S2);
  decimal_2_binary(Astronauta,As);
  decimal_2_binary(Burro,Bs);
  ///////////// Definimos las funciones a realizar en función del caso que se ha elegido con los selectores
  if(S==0){
    for(i=0;i<4;i++){
      F[i]=As[i];  
    }
  }
  if(S==1){
    for(i=0;i<4;i++){
      F[i]=negacion(As[i]);
    }
  }
  if(S==2){
    for(i=0;i<4;i++){
      F[i]=Bs[i]; 
    }
  }
  if(S==3){
    for(i=0;i<4;i++){
      F[i]=negacion(Bs[i]);
    }
  }
  if(S==4){
    int suma=Astronauta+Burro;
    int sum[4];
    decimal_2_binary(suma,sum);
      for(i=0;i<4;i++){
        F[i]=sum[i];
      }
    }
  if(S==5){
    int producto=Astronauta*Burro;
    int product[4];
    decimal_2_binary(producto,product);
    for(i=0;i<4;i++){
      F[i]=product[i];
    }
  }
  if(S==6){
    for(i=0;i<4;i++){
      if(As[i]+Bs[i]==1){
        F[i]=1;
      }else{
        F[i]=0;
      }
    }
  }
  if(S==7){
    for(i=0;i<4;i++){
      if(As[i]+Bs[i]==1){
        F[i]=0;
      }else{
        F[i]=1;
      }
    }
  }
digitalWrite(LF0,F[0]);
digitalWrite(LF1,F[1]);
digitalWrite(LF2,F[2]);
digitalWrite(LF3,F[3]);

}

void decimal_2_binary(int dec, int *X){
  X[3]=dec/8;
  X[2]=(dec-8*X[3])/4;
  X[1]=(dec-8*X[3]-4*X[2])/2;
  X[0]=(dec-8*X[3]-4*X[2]-2*X[1]);
}

int negacion(int xd){
  if(xd==0){
    return 1;
  }
  return 0;
}
